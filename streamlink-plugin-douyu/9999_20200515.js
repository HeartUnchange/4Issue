var ta5dbb8799f653d9728d = [0xf44b8948, 0xd6460207, 0xbcd08607, 0x97a75cae, 0xfb2e203a, 0x1970332a, 0x98504e88, 0xdaf8f65d, 0xdbdd4008, 0x6398d0c2, 0xbd9bf8bb, 0x5424f42b, 0x7aa903a6, 0x73db1512, 0xf26840ba, 0xff70afda, 0x382ed5f, 0x70762e3, 0x7c037162, 0x9f6a4570, 0xf691c7b0, 0xc55f8eda, 0xa51417, 0x418326ba, 0x4a1f3c49, 0xe18a21c6, 0xf3d08911, 0x9465bb9c, 0xa5dd6d52, 0xb5ba6e35, 0x324c52e7, 0xde9b883c, 0xad1746cf, 0x5c1caccd, 0x72fc0d52, 0xd9c2a224, 0x9142b7a0, 0xd0d5274a, 0x3c98c3dd, 0x2df87048, 0x27c64a0a, 0x1837d5b6, 0x1a26f9fb, 0x8dd6f99a, 0xd0d29cb2, 0xc45de752, 0xc1018cb4, 0x4076ed3a, 0xd3f5124f, 0xd3e045d5, 0xa924f34c, 0x25ddb8e6, 0x4c791da8, 0x7ba732d5, 0x89237c93, 0x24d40102, 0x7f87d751, 0x22e23f5d, 0x28b102e3, 0xfe4d8d2e, 0x45655056, 0x85605394, 0xbc29e8ad, 0x1a2c315b, 0x7b22c0fa, 0x2cb528d, 0x344addf9, 0xf1681d2e, 0x4bcde411, 0x1020965f, 0xaca1eb89, 0x355a3ec5, 0xb496018d, 0x8f4e2b26, 0x7400b120, 0x8468936b, 0xbde9d703, 0x6061c4df, 0x2634573e, 0xdc1da0fe, 0x1417ea55, 0x22067aad, 0xe8768b09, 0x912f32ce, 0x98f1112d, 0xdc260214, 0xdf5f1ba2, 0x82540a2b, 0x46e229bd, 0x662f1640, 0x69a0c1a2, 0x4782ad35, 0x9c9f50f, 0x7362204e, 0xb698a490, 0x247006fb, 0x8185a9e0, 0xd243afdf, 0x594c37b7, 0xdec6e82d, 0xc3cf5a08, 0x98fe7c00, 0xe238c50d, 0x59cc0914, 0xea253816, 0x874aadd3, 0xccd0c670, 0x8d76d5, 0x639ce3f9, 0xd8e66caf, 0xdcd04f85, 0x56bde1ca, 0x71d7ca7f, 0x9a0f87cd, 0xdc7ea9a5, 0x6c0e15ba, 0xe7b1b5d3, 0x9492cbb1, 0x7893f1f3, 0x75e30882, 0xaa050605, 0x637d4f2, 0xf6de2b50, 0xad6e4fb8, 0xf986f09b, 0x664b6e6e, 0x4ea1d921, 0x19bcc7d6, 0xeb437eb0, 0xc4d56ba5, 0x5b470e03, 0x35bdaf48, 0xd0cd97fe, 0x763ee6e7, 0x2eb48f2b, 0x871a2802, 0x2d3ca416, 0x78e317a9, 0x170f6fa3, 0xb5808092, 0x799c1a69, 0xda2413a, 0x45063bee, 0x8bdde7e7, 0x9a020ff6, 0x750e4e7e, 0xcb8dde3f, 0x8f9b4636, 0xee920415, 0x7e99087b, 0x9e160da1, 0xecd676f7, 0x98d7261, 0x9979af8e, 0x4ca26c1a, 0xa6948aee, 0x5f4d1c5b, 0x2c2213fc, 0x10b99a34, 0x5c8308e4, 0x985b5c44, 0xfe409a7a, 0xac1f408, 0x91910938, 0x28f4f032, 0x15e98f26, 0x23f372d1, 0x4cd48504, 0x88644ad8, 0xf0319618, 0xade69b41, 0xea83112a, 0xa6d11297, 0x167d2267, 0x57435b22, 0x239ef4e6, 0x8ab02723, 0x2fdd79c8, 0x12406807, 0xd7eb795f, 0xb2b341cb, 0x32dfc294, 0xc6051e4, 0xce3c694f, 0xe35f5bdf, 0xdf46a49a, 0x6cd82bf2, 0x2951aceb, 0xdd5f07bc, 0xd9eea836, 0x6de0cc3b, 0x54ff2e40, 0xe1de1ef8, 0x18470355, 0xa34618a5, 0x1bbad8c2, 0xab0df3b3, 0xc4f56c0e, 0xb264f7ae, 0xcdd3c9c5, 0x39b8fbb2, 0xc3ad148a, 0x30ec41ea, 0xaf63ee0, 0xfb4925d1, 0x175d314e, 0xd70550f5, 0x930bd04d, 0x3c475a64, 0x96616d7e, 0xce860035, 0x80daef68, 0xb25518b1, 0x1872066e, 0x22e06300, 0x483b2aaf, 0x5b141fae, 0x4607be2f, 0x91100643, 0x3ae3f916, 0xe13638bc, 0xa9cba5a7, 0xa7637914, 0xf4091d7e, 0x2c573e47, 0x6cba0118, 0x3e6bc8e7, 0xb7c412f9, 0x556af7a9, 0x56cd95d2, 0x778e3512, 0x77a5c0ac, 0x49144f5e, 0x4dbcac6c, 0x361d0341, 0x78cbf5b3, 0x2c3da28e, 0x2681acb3, 0x3a3109f4, 0x90e41f6a, 0x5b7a006, 0x973a9d56, 0x91986754, 0xc5cce64a, 0xe74e4c31, 0xcf2aeca2, 0xd261e77b, 0xc296eb4f, 0x171bf85c, 0x29f263c5, 0x42c48fd0, 0xbb5d6941, 0xf40b9057, 0x6b7073e8, 0x72b91889, 0x41f0ec2c, 0xb80a0478, 0x2ade21c1, 0x9086aabc, 0x576149a6, 0x3ebfab70, 0xfe7bb7ba, 0xccaaee92, 0x6f0a26d4, 0x523e6c32, 0x4126cfa5, 0xfde95eb5, 0x34e0e440, 0xd3bd2c13, 0x8c83c547, 0x4e149cbe, 0x81649b75, 0xd28853c9, 0x7f72481e, 0x12e9909f, 0x6ceb36c0, 0xee20032b, 0x96614f44, 0x5794f7f7, 0xf6ff13e8, 0x366104b5, 0xe94a5873, 0x91e0651a, 0x4c5b777a, 0xe75db490, 0xfb11d656, 0x12ac8de3, 0x55a6d9b9, 0xf2323ac7, 0x41155eaa, 0x3f7caa7b, 0x2caeff29, 0x5c3fe83c, 0x15e5dd35, 0x47dd0914, 0xc2cabdc4, 0xc3099322, 0x96ace286, 0xdee1d006, 0x8e75eb93, 0xfb46d68d, 0x6f8b88a2, 0x2c05ad6, 0x9efead97, 0x73cf5604, 0x39773509, 0x751ed7a0, 0xe9b7c180, 0x4c606333, 0x81ea3082, 0x541a7fec, 0x2ae5be54, 0xa059f2a2, 0xece7c3c0, 0xea9b9b3c, 0x45acf196, 0xce5140c, 0x862a64ef, 0x79b41b9d, 0xb73163ce, 0x20ec2b2d, 0xcfaa9de4, 0xd8d9c37f, 0x7cbc1237, 0x40ec9ed2, 0x42967869, 0x43402e79, 0xfd7415fe, 0xee87aa66, 0x8ee3700f, 0xd122740, 0xfdc3d347, 0xe74bdfd, 0x4b0966d1, 0x170fa5, 0x917e2099, 0xbb4a364e, 0xad325ca9, 0x69f84e2f, 0xdd3e63fe, 0x5711cb7b, 0xa14aba5a, 0xf271efe, 0xff1b8d26, 0xe0c50d03, 0x1829a3d6, 0xb69b459f, 0xbd24a3fb, 0x8b4e640a, 0x48f05428, 0x4f33a9ba, 0xb818f635, 0xd3a4a390, 0xe34e99ce, 0x857903d3, 0xfd9dc78d, 0x1473a198, 0xc7e07134, 0xb4e73103, 0x751e155c, 0xae4d538c, 0x4d39da7, 0xe7645b62, 0xfed812e, 0x44165d98, 0xbaa26c1e, 0x5183f755, 0xc5ea5a42, 0x3b8888b6, 0x5365865f, 0x4d7ef844, 0xf808109d, 0x20b68eb7, 0xcfc58b61, 0xd792e41b, 0x4ce20daf, 0x6f12f461, 0xfce3e6f5, 0x3a4b1a90, 0x98d7ce7e, 0xa970b7, 0xce8b775, 0x1a592908, 0x181cbcc2, 0xb5380b8c, 0x18997dd3, 0x84de387d, 0x4106ed87, 0x61ccfad3, 0x4c2f48e3, 0x6849832a, 0x9eae7622, 0x71af8f6e, 0x3a80ce6b, 0x6a29f7ea, 0x75a08347, 0x94abd579, 0x9dda380, 0xe4865452, 0x672b2ca5];

function ub98484234(ta5dbb8799f653d9728d0, ta5dbb8799f653d9728d1, ta5dbb8799f653d9728d2) {
    var rk = [21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13];
    var k2 = [0xea5257e, 0x56c03bd8];
    var lk = [0xea5257e, 0x56c03bd8];
    var v = ta5dbb8799f653d9728d.slice(0);
    var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
    for (var O = 0; O < 400; O++) {
        v[O] ^= 0x17ffb7c9;
    }
    v[1] -= lk[1];
    v[0] = (v[0] << (lk[0] % 16)) | (v[0] >>> (32 - (lk[0] % 16)));
    v[3] += lk[1];
    v[2] ^= lk[0];
    v[5] = (v[5] << (lk[1] % 16)) | (v[5] >>> (32 - (lk[1] % 16)));
    v[4] = (v[4] << (lk[0] % 16)) | (v[4] >>> (32 - (lk[0] % 16)));
    v[7] += lk[1];
    v[6] += lk[0];
    v[9] += lk[1];
    v[8] ^= lk[0];
    v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
    v[10] -= lk[0];
    v[13] ^= lk[1];
    v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
    v[15] += lk[1];
    v[14] -= lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] -= lk[1];
    v[18] = (v[18] << (lk[0] % 16)) | (v[18] >>> (32 - (lk[0] % 16)));
    v[21] += lk[1];
    v[20] ^= lk[0];
    v[23] = (v[23] << (lk[1] % 16)) | (v[23] >>> (32 - (lk[1] % 16)));
    v[22] = (v[22] << (lk[0] % 16)) | (v[22] >>> (32 - (lk[0] % 16)));
    v[25] += lk[1];
    v[24] += lk[0];
    v[27] += lk[1];
    v[26] ^= lk[0];
    v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
    v[28] -= lk[0];
    v[31] ^= lk[1];
    v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
    v[33] += lk[1];
    v[32] -= lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] -= lk[1];
    v[36] = (v[36] << (lk[0] % 16)) | (v[36] >>> (32 - (lk[0] % 16)));
    v[39] += lk[1];
    v[38] ^= lk[0];
    v[41] = (v[41] << (lk[1] % 16)) | (v[41] >>> (32 - (lk[1] % 16)));
    v[40] = (v[40] << (lk[0] % 16)) | (v[40] >>> (32 - (lk[0] % 16)));
    v[43] += lk[1];
    v[42] += lk[0];
    v[45] += lk[1];
    v[44] ^= lk[0];
    v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
    v[46] -= lk[0];
    v[49] ^= lk[1];
    v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
    v[51] += lk[1];
    v[50] -= lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] -= lk[1];
    v[54] = (v[54] << (lk[0] % 16)) | (v[54] >>> (32 - (lk[0] % 16)));
    v[57] += lk[1];
    v[56] ^= lk[0];
    v[59] = (v[59] << (lk[1] % 16)) | (v[59] >>> (32 - (lk[1] % 16)));
    v[58] = (v[58] << (lk[0] % 16)) | (v[58] >>> (32 - (lk[0] % 16)));
    v[61] += lk[1];
    v[60] += lk[0];
    v[63] += lk[1];
    v[62] ^= lk[0];
    v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
    v[64] -= lk[0];
    v[67] ^= lk[1];
    v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
    v[69] += lk[1];
    v[68] -= lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] -= lk[1];
    v[72] = (v[72] << (lk[0] % 16)) | (v[72] >>> (32 - (lk[0] % 16)));
    v[75] += lk[1];
    v[74] ^= lk[0];
    v[77] = (v[77] << (lk[1] % 16)) | (v[77] >>> (32 - (lk[1] % 16)));
    v[76] = (v[76] << (lk[0] % 16)) | (v[76] >>> (32 - (lk[0] % 16)));
    v[79] += lk[1];
    v[78] += lk[0];
    v[81] += lk[1];
    v[80] ^= lk[0];
    v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
    v[82] -= lk[0];
    v[85] ^= lk[1];
    v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
    v[87] += lk[1];
    v[86] -= lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] -= lk[1];
    v[90] = (v[90] << (lk[0] % 16)) | (v[90] >>> (32 - (lk[0] % 16)));
    v[93] += lk[1];
    v[92] ^= lk[0];
    v[95] = (v[95] << (lk[1] % 16)) | (v[95] >>> (32 - (lk[1] % 16)));
    v[94] = (v[94] << (lk[0] % 16)) | (v[94] >>> (32 - (lk[0] % 16)));
    v[97] += lk[1];
    v[96] += lk[0];
    v[99] += lk[1];
    v[98] ^= lk[0];
    v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
    v[100] -= lk[0];
    v[103] ^= lk[1];
    v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
    v[105] += lk[1];
    v[104] -= lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] -= lk[1];
    v[108] = (v[108] << (lk[0] % 16)) | (v[108] >>> (32 - (lk[0] % 16)));
    v[111] += lk[1];
    v[110] ^= lk[0];
    v[113] = (v[113] << (lk[1] % 16)) | (v[113] >>> (32 - (lk[1] % 16)));
    v[112] = (v[112] << (lk[0] % 16)) | (v[112] >>> (32 - (lk[0] % 16)));
    v[115] += lk[1];
    v[114] += lk[0];
    v[117] += lk[1];
    v[116] ^= lk[0];
    v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16)));
    v[118] -= lk[0];
    v[121] ^= lk[1];
    v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16)));
    v[123] += lk[1];
    v[122] -= lk[0];
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] -= lk[1];
    v[126] = (v[126] << (lk[0] % 16)) | (v[126] >>> (32 - (lk[0] % 16)));
    v[129] += lk[1];
    v[128] ^= lk[0];
    v[131] = (v[131] << (lk[1] % 16)) | (v[131] >>> (32 - (lk[1] % 16)));
    v[130] = (v[130] << (lk[0] % 16)) | (v[130] >>> (32 - (lk[0] % 16)));
    v[133] += lk[1];
    v[132] += lk[0];
    v[135] += lk[1];
    v[134] ^= lk[0];
    v[137] = (v[137] << (lk[1] % 16)) | (v[137] >>> (32 - (lk[1] % 16)));
    v[136] -= lk[0];
    v[139] ^= lk[1];
    v[138] = (v[138] >>> (lk[0] % 16)) | (v[138] << (32 - (lk[0] % 16)));
    v[141] += lk[1];
    v[140] -= lk[0];
    v[143] -= lk[1];
    v[142] -= lk[0];
    v[145] -= lk[1];
    v[144] = (v[144] << (lk[0] % 16)) | (v[144] >>> (32 - (lk[0] % 16)));
    v[147] += lk[1];
    v[146] ^= lk[0];
    v[149] = (v[149] << (lk[1] % 16)) | (v[149] >>> (32 - (lk[1] % 16)));
    v[148] = (v[148] << (lk[0] % 16)) | (v[148] >>> (32 - (lk[0] % 16)));
    v[151] += lk[1];
    v[150] += lk[0];
    v[153] += lk[1];
    v[152] ^= lk[0];
    v[155] = (v[155] << (lk[1] % 16)) | (v[155] >>> (32 - (lk[1] % 16)));
    v[154] -= lk[0];
    v[157] ^= lk[1];
    v[156] = (v[156] >>> (lk[0] % 16)) | (v[156] << (32 - (lk[0] % 16)));
    v[159] += lk[1];
    v[158] -= lk[0];
    v[161] -= lk[1];
    v[160] -= lk[0];
    v[163] -= lk[1];
    v[162] = (v[162] << (lk[0] % 16)) | (v[162] >>> (32 - (lk[0] % 16)));
    v[165] += lk[1];
    v[164] ^= lk[0];
    v[167] = (v[167] << (lk[1] % 16)) | (v[167] >>> (32 - (lk[1] % 16)));
    v[166] = (v[166] << (lk[0] % 16)) | (v[166] >>> (32 - (lk[0] % 16)));
    v[169] += lk[1];
    v[168] += lk[0];
    v[171] += lk[1];
    v[170] ^= lk[0];
    v[173] = (v[173] << (lk[1] % 16)) | (v[173] >>> (32 - (lk[1] % 16)));
    v[172] -= lk[0];
    v[175] ^= lk[1];
    v[174] = (v[174] >>> (lk[0] % 16)) | (v[174] << (32 - (lk[0] % 16)));
    v[177] += lk[1];
    v[176] -= lk[0];
    v[179] -= lk[1];
    v[178] -= lk[0];
    v[181] -= lk[1];
    v[180] = (v[180] << (lk[0] % 16)) | (v[180] >>> (32 - (lk[0] % 16)));
    v[183] += lk[1];
    v[182] ^= lk[0];
    v[185] = (v[185] << (lk[1] % 16)) | (v[185] >>> (32 - (lk[1] % 16)));
    v[184] = (v[184] << (lk[0] % 16)) | (v[184] >>> (32 - (lk[0] % 16)));
    v[187] += lk[1];
    v[186] += lk[0];
    v[189] += lk[1];
    v[188] ^= lk[0];
    v[191] = (v[191] << (lk[1] % 16)) | (v[191] >>> (32 - (lk[1] % 16)));
    v[190] -= lk[0];
    v[193] ^= lk[1];
    v[192] = (v[192] >>> (lk[0] % 16)) | (v[192] << (32 - (lk[0] % 16)));
    v[195] += lk[1];
    v[194] -= lk[0];
    v[197] -= lk[1];
    v[196] -= lk[0];
    v[199] -= lk[1];
    v[198] = (v[198] << (lk[0] % 16)) | (v[198] >>> (32 - (lk[0] % 16)));
    v[201] += lk[1];
    v[200] ^= lk[0];
    v[203] = (v[203] << (lk[1] % 16)) | (v[203] >>> (32 - (lk[1] % 16)));
    v[202] = (v[202] << (lk[0] % 16)) | (v[202] >>> (32 - (lk[0] % 16)));
    v[205] += lk[1];
    v[204] += lk[0];
    v[207] += lk[1];
    v[206] ^= lk[0];
    v[209] = (v[209] << (lk[1] % 16)) | (v[209] >>> (32 - (lk[1] % 16)));
    v[208] -= lk[0];
    v[211] ^= lk[1];
    v[210] = (v[210] >>> (lk[0] % 16)) | (v[210] << (32 - (lk[0] % 16)));
    v[213] += lk[1];
    v[212] -= lk[0];
    v[215] -= lk[1];
    v[214] -= lk[0];
    v[217] -= lk[1];
    v[216] = (v[216] << (lk[0] % 16)) | (v[216] >>> (32 - (lk[0] % 16)));
    v[219] += lk[1];
    v[218] ^= lk[0];
    v[221] = (v[221] << (lk[1] % 16)) | (v[221] >>> (32 - (lk[1] % 16)));
    v[220] = (v[220] << (lk[0] % 16)) | (v[220] >>> (32 - (lk[0] % 16)));
    v[223] += lk[1];
    v[222] += lk[0];
    v[225] += lk[1];
    v[224] ^= lk[0];
    v[227] = (v[227] << (lk[1] % 16)) | (v[227] >>> (32 - (lk[1] % 16)));
    v[226] -= lk[0];
    v[229] ^= lk[1];
    v[228] = (v[228] >>> (lk[0] % 16)) | (v[228] << (32 - (lk[0] % 16)));
    v[231] += lk[1];
    v[230] -= lk[0];
    v[233] -= lk[1];
    v[232] -= lk[0];
    v[235] -= lk[1];
    v[234] = (v[234] << (lk[0] % 16)) | (v[234] >>> (32 - (lk[0] % 16)));
    v[237] += lk[1];
    v[236] ^= lk[0];
    v[239] = (v[239] << (lk[1] % 16)) | (v[239] >>> (32 - (lk[1] % 16)));
    v[238] = (v[238] << (lk[0] % 16)) | (v[238] >>> (32 - (lk[0] % 16)));
    v[241] += lk[1];
    v[240] += lk[0];
    v[243] += lk[1];
    v[242] ^= lk[0];
    v[245] = (v[245] << (lk[1] % 16)) | (v[245] >>> (32 - (lk[1] % 16)));
    v[244] -= lk[0];
    v[247] ^= lk[1];
    v[246] = (v[246] >>> (lk[0] % 16)) | (v[246] << (32 - (lk[0] % 16)));
    v[249] += lk[1];
    v[248] -= lk[0];
    v[251] -= lk[1];
    v[250] -= lk[0];
    v[253] -= lk[1];
    v[252] = (v[252] << (lk[0] % 16)) | (v[252] >>> (32 - (lk[0] % 16)));
    v[255] += lk[1];
    v[254] ^= lk[0];
    v[257] = (v[257] << (lk[1] % 16)) | (v[257] >>> (32 - (lk[1] % 16)));
    v[256] = (v[256] << (lk[0] % 16)) | (v[256] >>> (32 - (lk[0] % 16)));
    v[259] += lk[1];
    v[258] += lk[0];
    v[261] += lk[1];
    v[260] ^= lk[0];
    v[263] = (v[263] << (lk[1] % 16)) | (v[263] >>> (32 - (lk[1] % 16)));
    v[262] -= lk[0];
    v[265] ^= lk[1];
    v[264] = (v[264] >>> (lk[0] % 16)) | (v[264] << (32 - (lk[0] % 16)));
    v[267] += lk[1];
    v[266] -= lk[0];
    v[269] -= lk[1];
    v[268] -= lk[0];
    v[271] -= lk[1];
    v[270] = (v[270] << (lk[0] % 16)) | (v[270] >>> (32 - (lk[0] % 16)));
    v[273] += lk[1];
    v[272] ^= lk[0];
    v[275] = (v[275] << (lk[1] % 16)) | (v[275] >>> (32 - (lk[1] % 16)));
    v[274] = (v[274] << (lk[0] % 16)) | (v[274] >>> (32 - (lk[0] % 16)));
    v[277] += lk[1];
    v[276] += lk[0];
    v[279] += lk[1];
    v[278] ^= lk[0];
    v[281] = (v[281] << (lk[1] % 16)) | (v[281] >>> (32 - (lk[1] % 16)));
    v[280] -= lk[0];
    v[283] ^= lk[1];
    v[282] = (v[282] >>> (lk[0] % 16)) | (v[282] << (32 - (lk[0] % 16)));
    v[285] += lk[1];
    v[284] -= lk[0];
    v[287] -= lk[1];
    v[286] -= lk[0];
    v[289] -= lk[1];
    v[288] = (v[288] << (lk[0] % 16)) | (v[288] >>> (32 - (lk[0] % 16)));
    v[291] += lk[1];
    v[290] ^= lk[0];
    v[293] = (v[293] << (lk[1] % 16)) | (v[293] >>> (32 - (lk[1] % 16)));
    v[292] = (v[292] << (lk[0] % 16)) | (v[292] >>> (32 - (lk[0] % 16)));
    v[295] += lk[1];
    v[294] += lk[0];
    v[297] += lk[1];
    v[296] ^= lk[0];
    v[299] = (v[299] << (lk[1] % 16)) | (v[299] >>> (32 - (lk[1] % 16)));
    v[298] -= lk[0];
    v[301] ^= lk[1];
    v[300] = (v[300] >>> (lk[0] % 16)) | (v[300] << (32 - (lk[0] % 16)));
    v[303] += lk[1];
    v[302] -= lk[0];
    v[305] -= lk[1];
    v[304] -= lk[0];
    v[307] -= lk[1];
    v[306] = (v[306] << (lk[0] % 16)) | (v[306] >>> (32 - (lk[0] % 16)));
    v[309] += lk[1];
    v[308] ^= lk[0];
    v[311] = (v[311] << (lk[1] % 16)) | (v[311] >>> (32 - (lk[1] % 16)));
    v[310] = (v[310] << (lk[0] % 16)) | (v[310] >>> (32 - (lk[0] % 16)));
    v[313] += lk[1];
    v[312] += lk[0];
    v[315] += lk[1];
    v[314] ^= lk[0];
    v[317] = (v[317] << (lk[1] % 16)) | (v[317] >>> (32 - (lk[1] % 16)));
    v[316] -= lk[0];
    v[319] ^= lk[1];
    v[318] = (v[318] >>> (lk[0] % 16)) | (v[318] << (32 - (lk[0] % 16)));
    v[321] += lk[1];
    v[320] -= lk[0];
    v[323] -= lk[1];
    v[322] -= lk[0];
    v[325] -= lk[1];
    v[324] = (v[324] << (lk[0] % 16)) | (v[324] >>> (32 - (lk[0] % 16)));
    v[327] += lk[1];
    v[326] ^= lk[0];
    v[329] = (v[329] << (lk[1] % 16)) | (v[329] >>> (32 - (lk[1] % 16)));
    v[328] = (v[328] << (lk[0] % 16)) | (v[328] >>> (32 - (lk[0] % 16)));
    v[331] += lk[1];
    v[330] += lk[0];
    v[333] += lk[1];
    v[332] ^= lk[0];
    v[335] = (v[335] << (lk[1] % 16)) | (v[335] >>> (32 - (lk[1] % 16)));
    v[334] -= lk[0];
    v[337] ^= lk[1];
    v[336] = (v[336] >>> (lk[0] % 16)) | (v[336] << (32 - (lk[0] % 16)));
    v[339] += lk[1];
    v[338] -= lk[0];
    v[341] -= lk[1];
    v[340] -= lk[0];
    v[343] -= lk[1];
    v[342] = (v[342] << (lk[0] % 16)) | (v[342] >>> (32 - (lk[0] % 16)));
    v[345] += lk[1];
    v[344] ^= lk[0];
    v[347] = (v[347] << (lk[1] % 16)) | (v[347] >>> (32 - (lk[1] % 16)));
    v[346] = (v[346] << (lk[0] % 16)) | (v[346] >>> (32 - (lk[0] % 16)));
    v[349] += lk[1];
    v[348] += lk[0];
    v[351] += lk[1];
    v[350] ^= lk[0];
    v[353] = (v[353] << (lk[1] % 16)) | (v[353] >>> (32 - (lk[1] % 16)));
    v[352] -= lk[0];
    v[355] ^= lk[1];
    v[354] = (v[354] >>> (lk[0] % 16)) | (v[354] << (32 - (lk[0] % 16)));
    v[357] += lk[1];
    v[356] -= lk[0];
    v[359] -= lk[1];
    v[358] -= lk[0];
    v[361] -= lk[1];
    v[360] = (v[360] << (lk[0] % 16)) | (v[360] >>> (32 - (lk[0] % 16)));
    v[363] += lk[1];
    v[362] ^= lk[0];
    v[365] = (v[365] << (lk[1] % 16)) | (v[365] >>> (32 - (lk[1] % 16)));
    v[364] = (v[364] << (lk[0] % 16)) | (v[364] >>> (32 - (lk[0] % 16)));
    v[367] += lk[1];
    v[366] += lk[0];
    v[369] += lk[1];
    v[368] ^= lk[0];
    v[371] = (v[371] << (lk[1] % 16)) | (v[371] >>> (32 - (lk[1] % 16)));
    v[370] -= lk[0];
    v[373] ^= lk[1];
    v[372] = (v[372] >>> (lk[0] % 16)) | (v[372] << (32 - (lk[0] % 16)));
    v[375] += lk[1];
    v[374] -= lk[0];
    v[377] -= lk[1];
    v[376] -= lk[0];
    v[379] -= lk[1];
    v[378] = (v[378] << (lk[0] % 16)) | (v[378] >>> (32 - (lk[0] % 16)));
    v[381] += lk[1];
    v[380] ^= lk[0];
    v[383] = (v[383] << (lk[1] % 16)) | (v[383] >>> (32 - (lk[1] % 16)));
    v[382] = (v[382] << (lk[0] % 16)) | (v[382] >>> (32 - (lk[0] % 16)));
    v[385] += lk[1];
    v[384] += lk[0];
    v[387] += lk[1];
    v[386] ^= lk[0];
    v[389] = (v[389] << (lk[1] % 16)) | (v[389] >>> (32 - (lk[1] % 16)));
    v[388] -= lk[0];
    v[391] ^= lk[1];
    v[390] = (v[390] >>> (lk[0] % 16)) | (v[390] << (32 - (lk[0] % 16)));
    v[393] += lk[1];
    v[392] -= lk[0];
    v[395] -= lk[1];
    v[394] -= lk[0];
    v[397] -= lk[1];
    v[396] = (v[396] << (lk[0] % 16)) | (v[396] >>> (32 - (lk[0] % 16)));
    v[399] += lk[1];
    v[398] ^= lk[0];
    for (var I = 0; I < 400; I += 2) {
        var i, v0 = v[I] ^ k2[0],
            v1 = v[I + 1] ^ k2[1],
            d = 0x9E3779B9,
            sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 399; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x17ffb7c9;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(ta5dbb8799f653d9728d0, ta5dbb8799f653d9728d1, ta5dbb8799f653d9728d2);
}