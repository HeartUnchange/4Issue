var j9d0bc2ff9e9b175c883 = [0xcf046ed6, 0x2b2655c0, 0xc122d3d7, 0x5e47388f, 0x9e4d2c10, 0xadc710a1, 0xac7c8b95, 0x7856164a, 0xb8bd44c2, 0x97155bc6, 0x7ab0d65f, 0x6119770a, 0x88ff29a7, 0x7b10871c, 0xe1f71cf, 0x5f0e5245, 0xd27672b, 0x584e6cc8, 0x3626b40d, 0x99a3db4a, 0x5cbbe78b, 0xb2c37298, 0x40f2b45f, 0xf4e6c646, 0x26a355b9, 0x677067c1, 0xd41c4cd, 0x64f60287, 0x930674c1, 0xda0cedc3, 0x982322ce, 0xb5ec5372, 0xb2aa1bb0, 0xba8ec95a, 0x814eb082, 0x8e6de6e8, 0x43f18dfd, 0x63959252, 0x32ef960c, 0x85df1cb5, 0xace533c8, 0x54bc0de1, 0xf67335bd, 0x68f2088, 0xe5c3149b, 0xfd66db18, 0x887aff82, 0x9c0d400e, 0x3c720291, 0x418ea17d, 0x476da58c, 0xc363cc0b, 0x528e5f66, 0xc42f76c2, 0x44920192, 0xd6c9201b, 0x14c55eff, 0x8f2f241d, 0xd8f0bdfc, 0x6de9c5d7, 0x35dedfbf, 0x236b8c80, 0x91fc81d6, 0x392e9ac5, 0xec45080d, 0x23d3053a, 0x35ca52ed, 0xdc91445b, 0xbb74430b, 0xcfe66e73, 0xfde66338, 0xffba76c6, 0x13cb1754, 0xe8f556f6, 0xa133e73b, 0x7709e2ca, 0x1ffbe94d, 0xce7c44b7, 0x70fa6c77, 0x48245bf6, 0x3044a4ba, 0x950e16be, 0xaf8dcb80, 0x35a1597f, 0x883d49bc, 0xff4bdb1, 0xac575a6e, 0xabd51740, 0x5f877ccb, 0xd5ffd465, 0x9e31619c, 0x5370b3d6, 0x553b8725, 0x7d8cdea0, 0xfc29aad4, 0xda79c033, 0x4302d9a5, 0xeee8f9b6, 0x8de3b37e, 0xda4f980a, 0x8ed4682a, 0xeb2f9549, 0x51c364ee, 0xc1a3eda2, 0x50cf7ba, 0x4a85a36e, 0x5e230e6, 0x145bb171, 0xe0ebcda3, 0x65672fe0, 0xfc9e4b84, 0xb1aa5340, 0xb842ca2d, 0x855dd856, 0x9a87cc65, 0xe323b075, 0x20c40c2c, 0x3ae7e8fc, 0x59419610, 0x83cfa53e, 0x62e4ad6a, 0xc11a5b1, 0x48ccbd87, 0x1fe8884a, 0xa9de5fe1, 0x11ad84a8, 0xe8b65d9, 0xb3933118, 0x3fc1641e, 0x186919ce, 0xec243253, 0x9742c0a0, 0x6d32a375, 0x3f6312a6, 0x8ff275bf, 0xfeaebf2c, 0xbe4c01b2, 0xffed9e22, 0x4d111404, 0x71c2462e, 0x75d16ed2, 0x90eb6dd, 0xcdaef40e, 0xe3ccad1, 0xddbadff, 0x34050a59, 0x6c21c9fb, 0x6d4aeddb, 0x7f17044a, 0xbbf7d17c, 0x46cc35cd, 0xa226584b, 0xde404c40, 0x891accf8, 0xf04ad473, 0x24428da3, 0x9b55d33, 0x3dd40ae3, 0xd01d548a, 0x2eca6733, 0xc428523a, 0x2285e90d, 0xe48a846f, 0xd1b5bc1a, 0x7ed1ee2f, 0xfcf2ad07, 0x85aaf9f, 0xb4419c03, 0xfb557ffc, 0xee73d769, 0x8b553e29, 0x47ef63b3, 0xb55f403e, 0xaaa3537a, 0xa82f527e, 0x96ff42a9, 0xd0b8f2fb, 0x4cd9499b, 0xcc2ed51e, 0x1db35941, 0x7f59b6da, 0x798752de, 0x592fe85, 0x8af263ce, 0x2ebc307b, 0x81cd39c8, 0xba374792, 0xc14aab79, 0xb9c1361d, 0x92d024ba, 0xb01397f5, 0x23d44759, 0x95fdefe6, 0xd15c2124, 0x4014fea5, 0x2fec2e4, 0x39bcd0ab, 0x324da364, 0xe6cc8afb, 0xf3a4a3c4, 0x820ef9ec, 0xfe5843af, 0x75b4ad5d, 0x41af65c1, 0xbb0f4a90, 0x9e466c62, 0xeea3d868, 0xae55b980, 0x7d239823, 0xb152e21d, 0x68d83042, 0x2d5e944e, 0x471c1427, 0x3c9d0c0c, 0xa81edcf7, 0x43c09fc5, 0xb95e8eeb, 0x191867a9, 0x3bf8f70a, 0xd0f56a96, 0x656d7f97, 0x9dbc1db9, 0x8fb9df61, 0xd1e3fd41, 0xcb0ce13c, 0xa3e37f8a, 0x3c2cb09b, 0xefbfc913, 0x407d47b, 0xeb7f5580, 0xe7456897, 0x1224b61e, 0x1831e5fd, 0x8384fe79, 0xa5de7851, 0xa210ce68, 0xdda3c2af, 0x4f9296b, 0x2970a8a0, 0x64f2df2b, 0xb141c4cc, 0x3ca7c083, 0xcf6e7f16, 0xa6502311, 0x7d8c4023, 0xc16f3e28, 0x3db7f558, 0xde70f4b, 0xe92eb51b, 0x36da5bc8, 0xce7d7c8b, 0xd5cf487d, 0x1f46ba98, 0x6e143a10, 0x787d9372, 0x46354361, 0xb4d86db4, 0x4a3214b9, 0x6fb8b7d4, 0x8cf2912, 0x9aa0a9a3, 0xfc05eed0, 0x9c8ecbc7, 0x82bd7140, 0x954b691e, 0x91dfdb3a, 0x3f9a45a8, 0x20c618ab, 0xe0d2fce7, 0x49372a8e, 0x1ae7fa2, 0x7b73c1af, 0x795a861c, 0x90a1dd2, 0x3b675148, 0xe45a419e, 0xe701ae3d, 0x533e1982, 0x66be9b55, 0x7e4a4328, 0xf4173aae, 0xebd13b52, 0x38f91966, 0x9fe48950, 0x248c80d5, 0x8578286e, 0x9ff1fc9c, 0x872e2004, 0x5e0067a7, 0x8e9eb4b1, 0xccdc96c4, 0x23182d36, 0x9d5369b5, 0xa5585feb, 0xb3d70b46, 0x669c0df3, 0x366ff542, 0x67baeea8, 0xc17c998b, 0x2502167, 0x23d3cf77, 0x7689a12b, 0x26e9f4d6, 0x7af6d23d, 0xf860eeef, 0x5f7a1dda, 0xa24920c, 0xa3d00eb7, 0x2f4884f5, 0x2151e11b, 0x8f1d5472, 0x8c2c3b8c, 0x7006b316, 0x54939e85, 0xb3b40219, 0xb6d2dcfd, 0xf7183447, 0x316268db, 0xc5b25ebc, 0x432a4b52, 0x694101d8, 0x605501aa, 0xc5ac794d, 0x1891510a, 0x692010ee, 0xfae11a55, 0xeeadbf56, 0xadcc95fc, 0xfafd03e3, 0x7f0d18b8, 0xe092c6e, 0xfa0a5286, 0x811dcff4, 0xa5e6352, 0x63b619ba, 0x6840505, 0x6502b59e, 0x80d8fc6a, 0xea746e70, 0xcfc6690b, 0xb70c20f0, 0xf309df67, 0xf4066887, 0x491d95f6, 0x8c85587c, 0xfa75b820, 0xe2d1b3bc, 0xb68d50a, 0xfbe5fc60, 0x8c5daee1, 0x7104b5e1, 0x9fc431b0, 0xdb5164f1, 0xc437c2f0, 0x3abc1090, 0x24212b82, 0x8e29e8cb, 0x4606bc5e, 0xa10266ec, 0x564cff19, 0xee63a314, 0x1fbabbcb, 0xb8d8b784, 0xc78941d4, 0x30b83b17, 0x4d62408f, 0x1aece405, 0xa19820b5, 0x69184778, 0xa9bc9a56, 0x9e8e3fc8, 0x75513274, 0x365d3cba, 0x924146e2, 0x37bf1a24, 0x39641d77, 0x612add35, 0xae632e1c, 0xe6b20232, 0x30ae0188, 0x529d6b38, 0xfa1ad92a];

function ub98484234(j9d0bc2ff9e9b175c8830, j9d0bc2ff9e9b175c8831, j9d0bc2ff9e9b175c8832) {
    var rk = [21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13];
    var k2 = [0xea5257e, 0x7e4f1522];
    var lk = [0xea5257e, 0x7e4f1522];
    var v = j9d0bc2ff9e9b175c883.slice(0);
    var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
    for (var O = 0; O < 382; O++) {
        v[O] ^= 0x70ffe732;
    }
    v[1] -= lk[1];
    v[0] ^= lk[0];
    v[3] += lk[1];
    v[2] = (v[2] << (lk[0] % 16)) | (v[2] >>> (32 - (lk[0] % 16)));
    v[5] = (v[5] << (lk[1] % 16)) | (v[5] >>> (32 - (lk[1] % 16)));
    v[4] = (v[4] >>> (lk[0] % 16)) | (v[4] << (32 - (lk[0] % 16)));
    v[7] += lk[1];
    v[6] -= lk[0];
    v[9] += lk[1];
    v[8] = (v[8] >>> (lk[0] % 16)) | (v[8] << (32 - (lk[0] % 16)));
    v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
    v[10] ^= lk[0];
    v[13] ^= lk[1];
    v[12] -= lk[0];
    v[15] += lk[1];
    v[14] -= lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] -= lk[1];
    v[18] ^= lk[0];
    v[21] += lk[1];
    v[20] = (v[20] << (lk[0] % 16)) | (v[20] >>> (32 - (lk[0] % 16)));
    v[23] = (v[23] << (lk[1] % 16)) | (v[23] >>> (32 - (lk[1] % 16)));
    v[22] = (v[22] >>> (lk[0] % 16)) | (v[22] << (32 - (lk[0] % 16)));
    v[25] += lk[1];
    v[24] -= lk[0];
    v[27] += lk[1];
    v[26] = (v[26] >>> (lk[0] % 16)) | (v[26] << (32 - (lk[0] % 16)));
    v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
    v[28] ^= lk[0];
    v[31] ^= lk[1];
    v[30] -= lk[0];
    v[33] += lk[1];
    v[32] -= lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] -= lk[1];
    v[36] ^= lk[0];
    v[39] += lk[1];
    v[38] = (v[38] << (lk[0] % 16)) | (v[38] >>> (32 - (lk[0] % 16)));
    v[41] = (v[41] << (lk[1] % 16)) | (v[41] >>> (32 - (lk[1] % 16)));
    v[40] = (v[40] >>> (lk[0] % 16)) | (v[40] << (32 - (lk[0] % 16)));
    v[43] += lk[1];
    v[42] -= lk[0];
    v[45] += lk[1];
    v[44] = (v[44] >>> (lk[0] % 16)) | (v[44] << (32 - (lk[0] % 16)));
    v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
    v[46] ^= lk[0];
    v[49] ^= lk[1];
    v[48] -= lk[0];
    v[51] += lk[1];
    v[50] -= lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] -= lk[1];
    v[54] ^= lk[0];
    v[57] += lk[1];
    v[56] = (v[56] << (lk[0] % 16)) | (v[56] >>> (32 - (lk[0] % 16)));
    v[59] = (v[59] << (lk[1] % 16)) | (v[59] >>> (32 - (lk[1] % 16)));
    v[58] = (v[58] >>> (lk[0] % 16)) | (v[58] << (32 - (lk[0] % 16)));
    v[61] += lk[1];
    v[60] -= lk[0];
    v[63] += lk[1];
    v[62] = (v[62] >>> (lk[0] % 16)) | (v[62] << (32 - (lk[0] % 16)));
    v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
    v[64] ^= lk[0];
    v[67] ^= lk[1];
    v[66] -= lk[0];
    v[69] += lk[1];
    v[68] -= lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] -= lk[1];
    v[72] ^= lk[0];
    v[75] += lk[1];
    v[74] = (v[74] << (lk[0] % 16)) | (v[74] >>> (32 - (lk[0] % 16)));
    v[77] = (v[77] << (lk[1] % 16)) | (v[77] >>> (32 - (lk[1] % 16)));
    v[76] = (v[76] >>> (lk[0] % 16)) | (v[76] << (32 - (lk[0] % 16)));
    v[79] += lk[1];
    v[78] -= lk[0];
    v[81] += lk[1];
    v[80] = (v[80] >>> (lk[0] % 16)) | (v[80] << (32 - (lk[0] % 16)));
    v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
    v[82] ^= lk[0];
    v[85] ^= lk[1];
    v[84] -= lk[0];
    v[87] += lk[1];
    v[86] -= lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] -= lk[1];
    v[90] ^= lk[0];
    v[93] += lk[1];
    v[92] = (v[92] << (lk[0] % 16)) | (v[92] >>> (32 - (lk[0] % 16)));
    v[95] = (v[95] << (lk[1] % 16)) | (v[95] >>> (32 - (lk[1] % 16)));
    v[94] = (v[94] >>> (lk[0] % 16)) | (v[94] << (32 - (lk[0] % 16)));
    v[97] += lk[1];
    v[96] -= lk[0];
    v[99] += lk[1];
    v[98] = (v[98] >>> (lk[0] % 16)) | (v[98] << (32 - (lk[0] % 16)));
    v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
    v[100] ^= lk[0];
    v[103] ^= lk[1];
    v[102] -= lk[0];
    v[105] += lk[1];
    v[104] -= lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] -= lk[1];
    v[108] ^= lk[0];
    v[111] += lk[1];
    v[110] = (v[110] << (lk[0] % 16)) | (v[110] >>> (32 - (lk[0] % 16)));
    v[113] = (v[113] << (lk[1] % 16)) | (v[113] >>> (32 - (lk[1] % 16)));
    v[112] = (v[112] >>> (lk[0] % 16)) | (v[112] << (32 - (lk[0] % 16)));
    v[115] += lk[1];
    v[114] -= lk[0];
    v[117] += lk[1];
    v[116] = (v[116] >>> (lk[0] % 16)) | (v[116] << (32 - (lk[0] % 16)));
    v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16)));
    v[118] ^= lk[0];
    v[121] ^= lk[1];
    v[120] -= lk[0];
    v[123] += lk[1];
    v[122] -= lk[0];
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] -= lk[1];
    v[126] ^= lk[0];
    v[129] += lk[1];
    v[128] = (v[128] << (lk[0] % 16)) | (v[128] >>> (32 - (lk[0] % 16)));
    v[131] = (v[131] << (lk[1] % 16)) | (v[131] >>> (32 - (lk[1] % 16)));
    v[130] = (v[130] >>> (lk[0] % 16)) | (v[130] << (32 - (lk[0] % 16)));
    v[133] += lk[1];
    v[132] -= lk[0];
    v[135] += lk[1];
    v[134] = (v[134] >>> (lk[0] % 16)) | (v[134] << (32 - (lk[0] % 16)));
    v[137] = (v[137] << (lk[1] % 16)) | (v[137] >>> (32 - (lk[1] % 16)));
    v[136] ^= lk[0];
    v[139] ^= lk[1];
    v[138] -= lk[0];
    v[141] += lk[1];
    v[140] -= lk[0];
    v[143] -= lk[1];
    v[142] -= lk[0];
    v[145] -= lk[1];
    v[144] ^= lk[0];
    v[147] += lk[1];
    v[146] = (v[146] << (lk[0] % 16)) | (v[146] >>> (32 - (lk[0] % 16)));
    v[149] = (v[149] << (lk[1] % 16)) | (v[149] >>> (32 - (lk[1] % 16)));
    v[148] = (v[148] >>> (lk[0] % 16)) | (v[148] << (32 - (lk[0] % 16)));
    v[151] += lk[1];
    v[150] -= lk[0];
    v[153] += lk[1];
    v[152] = (v[152] >>> (lk[0] % 16)) | (v[152] << (32 - (lk[0] % 16)));
    v[155] = (v[155] << (lk[1] % 16)) | (v[155] >>> (32 - (lk[1] % 16)));
    v[154] ^= lk[0];
    v[157] ^= lk[1];
    v[156] -= lk[0];
    v[159] += lk[1];
    v[158] -= lk[0];
    v[161] -= lk[1];
    v[160] -= lk[0];
    v[163] -= lk[1];
    v[162] ^= lk[0];
    v[165] += lk[1];
    v[164] = (v[164] << (lk[0] % 16)) | (v[164] >>> (32 - (lk[0] % 16)));
    v[167] = (v[167] << (lk[1] % 16)) | (v[167] >>> (32 - (lk[1] % 16)));
    v[166] = (v[166] >>> (lk[0] % 16)) | (v[166] << (32 - (lk[0] % 16)));
    v[169] += lk[1];
    v[168] -= lk[0];
    v[171] += lk[1];
    v[170] = (v[170] >>> (lk[0] % 16)) | (v[170] << (32 - (lk[0] % 16)));
    v[173] = (v[173] << (lk[1] % 16)) | (v[173] >>> (32 - (lk[1] % 16)));
    v[172] ^= lk[0];
    v[175] ^= lk[1];
    v[174] -= lk[0];
    v[177] += lk[1];
    v[176] -= lk[0];
    v[179] -= lk[1];
    v[178] -= lk[0];
    v[181] -= lk[1];
    v[180] ^= lk[0];
    v[183] += lk[1];
    v[182] = (v[182] << (lk[0] % 16)) | (v[182] >>> (32 - (lk[0] % 16)));
    v[185] = (v[185] << (lk[1] % 16)) | (v[185] >>> (32 - (lk[1] % 16)));
    v[184] = (v[184] >>> (lk[0] % 16)) | (v[184] << (32 - (lk[0] % 16)));
    v[187] += lk[1];
    v[186] -= lk[0];
    v[189] += lk[1];
    v[188] = (v[188] >>> (lk[0] % 16)) | (v[188] << (32 - (lk[0] % 16)));
    v[191] = (v[191] << (lk[1] % 16)) | (v[191] >>> (32 - (lk[1] % 16)));
    v[190] ^= lk[0];
    v[193] ^= lk[1];
    v[192] -= lk[0];
    v[195] += lk[1];
    v[194] -= lk[0];
    v[197] -= lk[1];
    v[196] -= lk[0];
    v[199] -= lk[1];
    v[198] ^= lk[0];
    v[201] += lk[1];
    v[200] = (v[200] << (lk[0] % 16)) | (v[200] >>> (32 - (lk[0] % 16)));
    v[203] = (v[203] << (lk[1] % 16)) | (v[203] >>> (32 - (lk[1] % 16)));
    v[202] = (v[202] >>> (lk[0] % 16)) | (v[202] << (32 - (lk[0] % 16)));
    v[205] += lk[1];
    v[204] -= lk[0];
    v[207] += lk[1];
    v[206] = (v[206] >>> (lk[0] % 16)) | (v[206] << (32 - (lk[0] % 16)));
    v[209] = (v[209] << (lk[1] % 16)) | (v[209] >>> (32 - (lk[1] % 16)));
    v[208] ^= lk[0];
    v[211] ^= lk[1];
    v[210] -= lk[0];
    v[213] += lk[1];
    v[212] -= lk[0];
    v[215] -= lk[1];
    v[214] -= lk[0];
    v[217] -= lk[1];
    v[216] ^= lk[0];
    v[219] += lk[1];
    v[218] = (v[218] << (lk[0] % 16)) | (v[218] >>> (32 - (lk[0] % 16)));
    v[221] = (v[221] << (lk[1] % 16)) | (v[221] >>> (32 - (lk[1] % 16)));
    v[220] = (v[220] >>> (lk[0] % 16)) | (v[220] << (32 - (lk[0] % 16)));
    v[223] += lk[1];
    v[222] -= lk[0];
    v[225] += lk[1];
    v[224] = (v[224] >>> (lk[0] % 16)) | (v[224] << (32 - (lk[0] % 16)));
    v[227] = (v[227] << (lk[1] % 16)) | (v[227] >>> (32 - (lk[1] % 16)));
    v[226] ^= lk[0];
    v[229] ^= lk[1];
    v[228] -= lk[0];
    v[231] += lk[1];
    v[230] -= lk[0];
    v[233] -= lk[1];
    v[232] -= lk[0];
    v[235] -= lk[1];
    v[234] ^= lk[0];
    v[237] += lk[1];
    v[236] = (v[236] << (lk[0] % 16)) | (v[236] >>> (32 - (lk[0] % 16)));
    v[239] = (v[239] << (lk[1] % 16)) | (v[239] >>> (32 - (lk[1] % 16)));
    v[238] = (v[238] >>> (lk[0] % 16)) | (v[238] << (32 - (lk[0] % 16)));
    v[241] += lk[1];
    v[240] -= lk[0];
    v[243] += lk[1];
    v[242] = (v[242] >>> (lk[0] % 16)) | (v[242] << (32 - (lk[0] % 16)));
    v[245] = (v[245] << (lk[1] % 16)) | (v[245] >>> (32 - (lk[1] % 16)));
    v[244] ^= lk[0];
    v[247] ^= lk[1];
    v[246] -= lk[0];
    v[249] += lk[1];
    v[248] -= lk[0];
    v[251] -= lk[1];
    v[250] -= lk[0];
    v[253] -= lk[1];
    v[252] ^= lk[0];
    v[255] += lk[1];
    v[254] = (v[254] << (lk[0] % 16)) | (v[254] >>> (32 - (lk[0] % 16)));
    v[257] = (v[257] << (lk[1] % 16)) | (v[257] >>> (32 - (lk[1] % 16)));
    v[256] = (v[256] >>> (lk[0] % 16)) | (v[256] << (32 - (lk[0] % 16)));
    v[259] += lk[1];
    v[258] -= lk[0];
    v[261] += lk[1];
    v[260] = (v[260] >>> (lk[0] % 16)) | (v[260] << (32 - (lk[0] % 16)));
    v[263] = (v[263] << (lk[1] % 16)) | (v[263] >>> (32 - (lk[1] % 16)));
    v[262] ^= lk[0];
    v[265] ^= lk[1];
    v[264] -= lk[0];
    v[267] += lk[1];
    v[266] -= lk[0];
    v[269] -= lk[1];
    v[268] -= lk[0];
    v[271] -= lk[1];
    v[270] ^= lk[0];
    v[273] += lk[1];
    v[272] = (v[272] << (lk[0] % 16)) | (v[272] >>> (32 - (lk[0] % 16)));
    v[275] = (v[275] << (lk[1] % 16)) | (v[275] >>> (32 - (lk[1] % 16)));
    v[274] = (v[274] >>> (lk[0] % 16)) | (v[274] << (32 - (lk[0] % 16)));
    v[277] += lk[1];
    v[276] -= lk[0];
    v[279] += lk[1];
    v[278] = (v[278] >>> (lk[0] % 16)) | (v[278] << (32 - (lk[0] % 16)));
    v[281] = (v[281] << (lk[1] % 16)) | (v[281] >>> (32 - (lk[1] % 16)));
    v[280] ^= lk[0];
    v[283] ^= lk[1];
    v[282] -= lk[0];
    v[285] += lk[1];
    v[284] -= lk[0];
    v[287] -= lk[1];
    v[286] -= lk[0];
    v[289] -= lk[1];
    v[288] ^= lk[0];
    v[291] += lk[1];
    v[290] = (v[290] << (lk[0] % 16)) | (v[290] >>> (32 - (lk[0] % 16)));
    v[293] = (v[293] << (lk[1] % 16)) | (v[293] >>> (32 - (lk[1] % 16)));
    v[292] = (v[292] >>> (lk[0] % 16)) | (v[292] << (32 - (lk[0] % 16)));
    v[295] += lk[1];
    v[294] -= lk[0];
    v[297] += lk[1];
    v[296] = (v[296] >>> (lk[0] % 16)) | (v[296] << (32 - (lk[0] % 16)));
    v[299] = (v[299] << (lk[1] % 16)) | (v[299] >>> (32 - (lk[1] % 16)));
    v[298] ^= lk[0];
    v[301] ^= lk[1];
    v[300] -= lk[0];
    v[303] += lk[1];
    v[302] -= lk[0];
    v[305] -= lk[1];
    v[304] -= lk[0];
    v[307] -= lk[1];
    v[306] ^= lk[0];
    v[309] += lk[1];
    v[308] = (v[308] << (lk[0] % 16)) | (v[308] >>> (32 - (lk[0] % 16)));
    v[311] = (v[311] << (lk[1] % 16)) | (v[311] >>> (32 - (lk[1] % 16)));
    v[310] = (v[310] >>> (lk[0] % 16)) | (v[310] << (32 - (lk[0] % 16)));
    v[313] += lk[1];
    v[312] -= lk[0];
    v[315] += lk[1];
    v[314] = (v[314] >>> (lk[0] % 16)) | (v[314] << (32 - (lk[0] % 16)));
    v[317] = (v[317] << (lk[1] % 16)) | (v[317] >>> (32 - (lk[1] % 16)));
    v[316] ^= lk[0];
    v[319] ^= lk[1];
    v[318] -= lk[0];
    v[321] += lk[1];
    v[320] -= lk[0];
    v[323] -= lk[1];
    v[322] -= lk[0];
    v[325] -= lk[1];
    v[324] ^= lk[0];
    v[327] += lk[1];
    v[326] = (v[326] << (lk[0] % 16)) | (v[326] >>> (32 - (lk[0] % 16)));
    v[329] = (v[329] << (lk[1] % 16)) | (v[329] >>> (32 - (lk[1] % 16)));
    v[328] = (v[328] >>> (lk[0] % 16)) | (v[328] << (32 - (lk[0] % 16)));
    v[331] += lk[1];
    v[330] -= lk[0];
    v[333] += lk[1];
    v[332] = (v[332] >>> (lk[0] % 16)) | (v[332] << (32 - (lk[0] % 16)));
    v[335] = (v[335] << (lk[1] % 16)) | (v[335] >>> (32 - (lk[1] % 16)));
    v[334] ^= lk[0];
    v[337] ^= lk[1];
    v[336] -= lk[0];
    v[339] += lk[1];
    v[338] -= lk[0];
    v[341] -= lk[1];
    v[340] -= lk[0];
    v[343] -= lk[1];
    v[342] ^= lk[0];
    v[345] += lk[1];
    v[344] = (v[344] << (lk[0] % 16)) | (v[344] >>> (32 - (lk[0] % 16)));
    v[347] = (v[347] << (lk[1] % 16)) | (v[347] >>> (32 - (lk[1] % 16)));
    v[346] = (v[346] >>> (lk[0] % 16)) | (v[346] << (32 - (lk[0] % 16)));
    v[349] += lk[1];
    v[348] -= lk[0];
    v[351] += lk[1];
    v[350] = (v[350] >>> (lk[0] % 16)) | (v[350] << (32 - (lk[0] % 16)));
    v[353] = (v[353] << (lk[1] % 16)) | (v[353] >>> (32 - (lk[1] % 16)));
    v[352] ^= lk[0];
    v[355] ^= lk[1];
    v[354] -= lk[0];
    v[357] += lk[1];
    v[356] -= lk[0];
    v[359] -= lk[1];
    v[358] -= lk[0];
    v[361] -= lk[1];
    v[360] ^= lk[0];
    v[363] += lk[1];
    v[362] = (v[362] << (lk[0] % 16)) | (v[362] >>> (32 - (lk[0] % 16)));
    v[365] = (v[365] << (lk[1] % 16)) | (v[365] >>> (32 - (lk[1] % 16)));
    v[364] = (v[364] >>> (lk[0] % 16)) | (v[364] << (32 - (lk[0] % 16)));
    v[367] += lk[1];
    v[366] -= lk[0];
    v[369] += lk[1];
    v[368] = (v[368] >>> (lk[0] % 16)) | (v[368] << (32 - (lk[0] % 16)));
    v[371] = (v[371] << (lk[1] % 16)) | (v[371] >>> (32 - (lk[1] % 16)));
    v[370] ^= lk[0];
    v[373] ^= lk[1];
    v[372] -= lk[0];
    v[375] += lk[1];
    v[374] -= lk[0];
    v[377] -= lk[1];
    v[376] -= lk[0];
    v[379] -= lk[1];
    v[378] ^= lk[0];
    v[381] += lk[1];
    v[380] = (v[380] << (lk[0] % 16)) | (v[380] >>> (32 - (lk[0] % 16)));
    for (var I = 0; I < 382; I += 2) {
        var i, v0 = v[I] ^ k2[0],
            v1 = v[I + 1] ^ k2[1],
            d = 0x9E3779B9,
            sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 381; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x70ffe732;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(j9d0bc2ff9e9b175c8830, j9d0bc2ff9e9b175c8831, j9d0bc2ff9e9b175c8832);
}