var df6bb82805247 = [0x93601f9a, 0xe82fa2c4, 0x9ba23940, 0xee737b29, 0x740dd36b, 0xdea662f1, 0x24cd597b, 0xc01340fe, 0xe95df922, 0x80c9c8bc, 0x58aac400, 0xc72646b1, 0x9367b187, 0x1dd9bd13, 0xf5046f4c, 0xbce2fcac, 0xf5b2e7c6, 0xed5afa43, 0x7dd32d54, 0x5634d34c, 0x3638168b, 0xf6740669, 0xa49bdcd1, 0x2cc2b43, 0x9951b915, 0x6b2b647e, 0x41361ae7, 0xc0111956, 0xcb55c9ec, 0x714c0f9f, 0xba9fad85, 0xcce40fee, 0x44b1d9bf, 0x19f4b92a, 0x1343e5bb, 0x53d38863, 0xc32b76ec, 0x72c6d52b, 0x9b7a3c7a, 0xe32e713c, 0x5ae62993, 0x1399de0b, 0x1ce31b91, 0x19415b54, 0xb568a53b, 0x7048a247, 0x8acce727, 0xb83409cd, 0xf3370ff4, 0xe397d1bb, 0x34e0c5d1, 0x350e4281, 0x230fd446, 0x591f82c5, 0x3af54088, 0x5d9ea753, 0x359ed035, 0x893641fa, 0x801d97e3, 0xb4e0916b, 0x6f286d4e, 0xb1c782dd, 0x3133480, 0xe8159de3, 0xbf70d977, 0x8558a3a0, 0x157f0513, 0xeae006bc, 0x55d2eb91, 0x17264b58, 0xfe3b03a7, 0x6ee002f9, 0x127a441c, 0x68fb4197, 0xa362c203, 0x10f09dd9, 0x67291b01, 0x46deac38, 0x470bc1bb, 0xb399e79e, 0xd5be867f, 0xa2e6d9cd, 0xca9d64b9, 0x9f043c39, 0xd9c85e59, 0x7b174bbe, 0xbcb47eb6, 0x8839e21c, 0x64ce55a, 0xecf251d4, 0x6624b96e, 0x5c923ab2, 0x19419d04, 0x8bde1166, 0x2526de, 0x64e1d7b5, 0x98610842, 0x2222a000, 0x3b3473ad, 0xfb5b787e, 0xeb37ed4d, 0x5f623ba3, 0x929f33d1, 0x8bf444b6, 0x6a3da138, 0x15bf9df4, 0x986aae60, 0x241fffd9, 0x831823dd, 0xfa1979a0, 0xd7cd30ef, 0x632e8a9, 0x3fae93f7, 0x9818427f, 0x249d2b3e, 0x47a3149d, 0xa1e1f35f, 0x66498aa6, 0xc2826772, 0xa9c6ca79, 0xc2700139, 0x23fd7310, 0x222abc89, 0x3e5d0b60, 0xe0d74412, 0x741a61a2, 0xc7a5fc74, 0x848dc7d8, 0x5b808480, 0x7b466d70, 0xaf2d533d, 0xf5225d63, 0x9a50ffef, 0xd0d18263, 0xfafa7573, 0x59cd7c31, 0x1601c36, 0x83d1fe6f, 0xf3d44696, 0xf269315c, 0x393500a4, 0x70943e17, 0xfcd4d767, 0xeb116b70, 0x880baabc, 0x251359d5, 0x76644985, 0xfdb08b4c, 0xb7b02060, 0x289754d1, 0xe00b4709, 0xda3426c4, 0xa5bc9b44, 0x6a8d7ddb, 0x9ac756f, 0x6cac97dd, 0xe3890cd, 0xc7eb792d, 0x398e61bb, 0x69d62fb9, 0x7ed64d4e, 0x21a5450c, 0x1b3d7556, 0x80a529bf, 0x3f44c2b, 0x25e3fc8d, 0xd76cb391, 0xc19b064b, 0xf07302d7, 0xda5eefa5, 0xb00e7d7d, 0xe66eb380, 0xd0b98b02, 0x2fa3b61a, 0xb92b9f83, 0xf0d01a57, 0xb5a6c562, 0xd9a28d78, 0xa5af267a, 0xb7ad58c9, 0x147cce65, 0x64bb6995, 0x95b8b42c, 0x3691d75f, 0xb1a6113c, 0x4d3819d6, 0xb88edb8c, 0xb098fd2a, 0x3c03483c, 0xd89d1e43, 0xd76b48df, 0xd395646b, 0xef53236b, 0xfa806b6, 0x40a81b30, 0x9d104126, 0xf3897d65, 0x46f88f4a, 0x86fe9c24, 0xcb495544, 0xa08350, 0xb08426c0, 0xb5f5b546, 0x5a39ed5a, 0x678a70ba, 0x458e12d7, 0x76c85af9, 0x4b97cc44, 0xb9410e0c, 0xc8d2de7f, 0x2fae387b, 0x94645b80, 0x95afb152, 0x338d3575, 0xb937ab39, 0xd4dc9e50, 0x91068631, 0xc8d515ab, 0xf6706de1, 0x1eaafb36, 0xe6ab6c83, 0x681e19d8, 0x2ecb7239, 0x8adfa0b7, 0xcc1286f5, 0x86305a58, 0xd12be47, 0xbb6303d9, 0xcb76c7d7, 0x855c029a, 0xba979b8b, 0xeabc94a0, 0x3fb7ef1b, 0xe8bb8f0, 0xda689b7b, 0xc3d7d159, 0x6510c50c, 0xbbe33701, 0x775bf880, 0xadface84, 0xbf7816b4, 0x3f7b2fa6, 0xfaef4e78, 0xf7caa420, 0xb3b924da, 0xdb36da9a, 0xf89fd094, 0xd1c50760, 0x94dc3bce, 0xead97646, 0xd4cf29ba, 0x53d291e, 0xced4d5c7, 0x59111897, 0xb869f250, 0xcca50f7f, 0xc15bae62, 0xf2448000, 0xdd2aaf8, 0x51a78bbe, 0xe55721a, 0xed0c8408, 0xb7724d61, 0x9f0d6c89, 0x8321d4bb, 0x637242d1, 0x9247fb63, 0x708b735b, 0x7818793c, 0xd6eb58e6, 0xf4720013, 0x19d3cf9a, 0xd9aa3cb7, 0xb87055e3, 0xb8725d26, 0x7556b8e0, 0x65cb5dad, 0x92eb354, 0x987700c5, 0x2030ca1b, 0xbb67cb6e, 0x2b3b371f, 0xfc128af, 0x2d92cf10, 0xa5b7f6e8, 0x369c3c0c, 0x6cff46e2, 0x48850aad, 0x21580f86, 0xbd637a3d, 0xb556f4eb, 0xe82620bc, 0xcb3976ef, 0x2bff7b21, 0x7b08a958, 0x3a46ad48, 0xc225675a, 0x7b161a14, 0xee4526c3, 0xbceb35da, 0x61558188, 0x469114ed, 0xf406b38c, 0x8c0bb4c3, 0x61daeec, 0x4e7ed796, 0xca34b5cb, 0x7c79468c, 0x9e81874, 0x1eacab6a, 0x71bbf040, 0x95cefd7a, 0xe31a36c2, 0x1ab0d4ba, 0xfb3fd65d, 0xca72a4fe, 0xab3a9725, 0x9a7e2fc, 0x968f26e5, 0xed18da3a, 0x62f47fb3, 0x96e4ac33, 0x72306eea, 0x265a0c06, 0xa59fbb96, 0x15e7a07e, 0xdc35f68e, 0x4ec00286, 0x3bf067a2, 0xa3a49b22, 0xb2b31054, 0x86905c78, 0xb2d9bdb4, 0x3973c076, 0x4a9e0dce, 0xe8db60d2, 0x5e1ba819, 0xd2da28dd, 0xcfadaa43, 0x53ed2c60, 0x2174f9cd, 0xa81c5c99, 0xd00f7cd4, 0xc15a51b7, 0xa3e716bc, 0xcc4cee3e, 0x6f1677ad, 0x12da38a3, 0xbb9782df, 0xeb88ef23, 0x7263b009, 0xeaf3f536, 0x4110a03, 0xfc5b5171, 0x8a997a86, 0x8d52aa55, 0x9820fbe6, 0xf116f0e2, 0x9c48d2c6, 0xec40441c, 0xe6ee2017, 0x27e9b158, 0x2a0e09e0, 0x24d3c94f, 0xf31e69e9, 0x737a8dc9, 0x8a71109d, 0x8d873696, 0x9da87a6, 0x6919eea5, 0xcc163812, 0xed3a113e, 0xace9bc34, 0xb430db4a, 0x4151f45d, 0x815fa965, 0x8683a6bf, 0x858fcc8f, 0xe5a641cd, 0x5e0af1b6, 0xd26f2255, 0x2a307ae3, 0xe5a81b25, 0x225f1f81, 0xcbf2cb4a, 0x887bda9b, 0xb21be7a2, 0x1c83e0e7, 0x87ec6151, 0xb4211ba3, 0xbb7e479, 0x473178e5, 0xda11c5e6, 0x854bb371, 0xae23bd5e, 0xc5d9da74, 0x83c6b01d, 0xd82df6b8, 0x9abc05e9, 0xe155d3c7, 0xc9a89fbb, 0x7b4f180a, 0xfc03c04a, 0xd2a36796, 0xe67891ef, 0x87974172, 0x9babc59a, 0x6ddd8b9e, 0x2a8463cf, 0x4c23d19b, 0xbe4021a7, 0x967d7651, 0x68686d18, 0x7c0477e3, 0x5ef3818, 0x61954cde, 0x40e30019, 0x73409e0c, 0x2995a5b0, 0x8ffa142c, 0x9ecf2739, 0x727437e8, 0xe79f6e29, 0xd6fe9176, 0x986c1651, 0xe78e6efd, 0x2e16957d, 0x8355a013, 0x6982309b, 0xa97c66cd];

function ub98484234(df6bb828052470, df6bb828052471, df6bb828052472) {
    var rk = [21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34, 10, 21, 13, 10, 11, 23, 30, 41, 34];
    var k2 = [0xea5257e, 0x59e5dbec];
    var lk = [0xea5257e, 0x59e5dbec];
    var v = df6bb82805247.slice(0);
    var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
    for (var O = 0; O < 430; O++) {
        v[O] ^= 0x976c073;
    }
    v[1] -= lk[1];
    v[0] = (v[0] >>> (lk[0] % 16)) | (v[0] << (32 - (lk[0] % 16)));
    v[3] += lk[1];
    v[2] += lk[0];
    v[5] = (v[5] << (lk[1] % 16)) | (v[5] >>> (32 - (lk[1] % 16)));
    v[4] = (v[4] >>> (lk[0] % 16)) | (v[4] << (32 - (lk[0] % 16)));
    v[7] += lk[1];
    v[6] = (v[6] << (lk[0] % 16)) | (v[6] >>> (32 - (lk[0] % 16)));
    v[9] += lk[1];
    v[8] ^= lk[0];
    v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
    v[10] -= lk[0];
    v[13] ^= lk[1];
    v[12] += lk[0];
    v[15] += lk[1];
    v[14] = (v[14] << (lk[0] % 16)) | (v[14] >>> (32 - (lk[0] % 16)));
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] -= lk[1];
    v[18] = (v[18] >>> (lk[0] % 16)) | (v[18] << (32 - (lk[0] % 16)));
    v[21] += lk[1];
    v[20] += lk[0];
    v[23] = (v[23] << (lk[1] % 16)) | (v[23] >>> (32 - (lk[1] % 16)));
    v[22] = (v[22] >>> (lk[0] % 16)) | (v[22] << (32 - (lk[0] % 16)));
    v[25] += lk[1];
    v[24] = (v[24] << (lk[0] % 16)) | (v[24] >>> (32 - (lk[0] % 16)));
    v[27] += lk[1];
    v[26] ^= lk[0];
    v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
    v[28] -= lk[0];
    v[31] ^= lk[1];
    v[30] += lk[0];
    v[33] += lk[1];
    v[32] = (v[32] << (lk[0] % 16)) | (v[32] >>> (32 - (lk[0] % 16)));
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] -= lk[1];
    v[36] = (v[36] >>> (lk[0] % 16)) | (v[36] << (32 - (lk[0] % 16)));
    v[39] += lk[1];
    v[38] += lk[0];
    v[41] = (v[41] << (lk[1] % 16)) | (v[41] >>> (32 - (lk[1] % 16)));
    v[40] = (v[40] >>> (lk[0] % 16)) | (v[40] << (32 - (lk[0] % 16)));
    v[43] += lk[1];
    v[42] = (v[42] << (lk[0] % 16)) | (v[42] >>> (32 - (lk[0] % 16)));
    v[45] += lk[1];
    v[44] ^= lk[0];
    v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
    v[46] -= lk[0];
    v[49] ^= lk[1];
    v[48] += lk[0];
    v[51] += lk[1];
    v[50] = (v[50] << (lk[0] % 16)) | (v[50] >>> (32 - (lk[0] % 16)));
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] -= lk[1];
    v[54] = (v[54] >>> (lk[0] % 16)) | (v[54] << (32 - (lk[0] % 16)));
    v[57] += lk[1];
    v[56] += lk[0];
    v[59] = (v[59] << (lk[1] % 16)) | (v[59] >>> (32 - (lk[1] % 16)));
    v[58] = (v[58] >>> (lk[0] % 16)) | (v[58] << (32 - (lk[0] % 16)));
    v[61] += lk[1];
    v[60] = (v[60] << (lk[0] % 16)) | (v[60] >>> (32 - (lk[0] % 16)));
    v[63] += lk[1];
    v[62] ^= lk[0];
    v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
    v[64] -= lk[0];
    v[67] ^= lk[1];
    v[66] += lk[0];
    v[69] += lk[1];
    v[68] = (v[68] << (lk[0] % 16)) | (v[68] >>> (32 - (lk[0] % 16)));
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] -= lk[1];
    v[72] = (v[72] >>> (lk[0] % 16)) | (v[72] << (32 - (lk[0] % 16)));
    v[75] += lk[1];
    v[74] += lk[0];
    v[77] = (v[77] << (lk[1] % 16)) | (v[77] >>> (32 - (lk[1] % 16)));
    v[76] = (v[76] >>> (lk[0] % 16)) | (v[76] << (32 - (lk[0] % 16)));
    v[79] += lk[1];
    v[78] = (v[78] << (lk[0] % 16)) | (v[78] >>> (32 - (lk[0] % 16)));
    v[81] += lk[1];
    v[80] ^= lk[0];
    v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
    v[82] -= lk[0];
    v[85] ^= lk[1];
    v[84] += lk[0];
    v[87] += lk[1];
    v[86] = (v[86] << (lk[0] % 16)) | (v[86] >>> (32 - (lk[0] % 16)));
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] -= lk[1];
    v[90] = (v[90] >>> (lk[0] % 16)) | (v[90] << (32 - (lk[0] % 16)));
    v[93] += lk[1];
    v[92] += lk[0];
    v[95] = (v[95] << (lk[1] % 16)) | (v[95] >>> (32 - (lk[1] % 16)));
    v[94] = (v[94] >>> (lk[0] % 16)) | (v[94] << (32 - (lk[0] % 16)));
    v[97] += lk[1];
    v[96] = (v[96] << (lk[0] % 16)) | (v[96] >>> (32 - (lk[0] % 16)));
    v[99] += lk[1];
    v[98] ^= lk[0];
    v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
    v[100] -= lk[0];
    v[103] ^= lk[1];
    v[102] += lk[0];
    v[105] += lk[1];
    v[104] = (v[104] << (lk[0] % 16)) | (v[104] >>> (32 - (lk[0] % 16)));
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] -= lk[1];
    v[108] = (v[108] >>> (lk[0] % 16)) | (v[108] << (32 - (lk[0] % 16)));
    v[111] += lk[1];
    v[110] += lk[0];
    v[113] = (v[113] << (lk[1] % 16)) | (v[113] >>> (32 - (lk[1] % 16)));
    v[112] = (v[112] >>> (lk[0] % 16)) | (v[112] << (32 - (lk[0] % 16)));
    v[115] += lk[1];
    v[114] = (v[114] << (lk[0] % 16)) | (v[114] >>> (32 - (lk[0] % 16)));
    v[117] += lk[1];
    v[116] ^= lk[0];
    v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16)));
    v[118] -= lk[0];
    v[121] ^= lk[1];
    v[120] += lk[0];
    v[123] += lk[1];
    v[122] = (v[122] << (lk[0] % 16)) | (v[122] >>> (32 - (lk[0] % 16)));
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] -= lk[1];
    v[126] = (v[126] >>> (lk[0] % 16)) | (v[126] << (32 - (lk[0] % 16)));
    v[129] += lk[1];
    v[128] += lk[0];
    v[131] = (v[131] << (lk[1] % 16)) | (v[131] >>> (32 - (lk[1] % 16)));
    v[130] = (v[130] >>> (lk[0] % 16)) | (v[130] << (32 - (lk[0] % 16)));
    v[133] += lk[1];
    v[132] = (v[132] << (lk[0] % 16)) | (v[132] >>> (32 - (lk[0] % 16)));
    v[135] += lk[1];
    v[134] ^= lk[0];
    v[137] = (v[137] << (lk[1] % 16)) | (v[137] >>> (32 - (lk[1] % 16)));
    v[136] -= lk[0];
    v[139] ^= lk[1];
    v[138] += lk[0];
    v[141] += lk[1];
    v[140] = (v[140] << (lk[0] % 16)) | (v[140] >>> (32 - (lk[0] % 16)));
    v[143] -= lk[1];
    v[142] -= lk[0];
    v[145] -= lk[1];
    v[144] = (v[144] >>> (lk[0] % 16)) | (v[144] << (32 - (lk[0] % 16)));
    v[147] += lk[1];
    v[146] += lk[0];
    v[149] = (v[149] << (lk[1] % 16)) | (v[149] >>> (32 - (lk[1] % 16)));
    v[148] = (v[148] >>> (lk[0] % 16)) | (v[148] << (32 - (lk[0] % 16)));
    v[151] += lk[1];
    v[150] = (v[150] << (lk[0] % 16)) | (v[150] >>> (32 - (lk[0] % 16)));
    v[153] += lk[1];
    v[152] ^= lk[0];
    v[155] = (v[155] << (lk[1] % 16)) | (v[155] >>> (32 - (lk[1] % 16)));
    v[154] -= lk[0];
    v[157] ^= lk[1];
    v[156] += lk[0];
    v[159] += lk[1];
    v[158] = (v[158] << (lk[0] % 16)) | (v[158] >>> (32 - (lk[0] % 16)));
    v[161] -= lk[1];
    v[160] -= lk[0];
    v[163] -= lk[1];
    v[162] = (v[162] >>> (lk[0] % 16)) | (v[162] << (32 - (lk[0] % 16)));
    v[165] += lk[1];
    v[164] += lk[0];
    v[167] = (v[167] << (lk[1] % 16)) | (v[167] >>> (32 - (lk[1] % 16)));
    v[166] = (v[166] >>> (lk[0] % 16)) | (v[166] << (32 - (lk[0] % 16)));
    v[169] += lk[1];
    v[168] = (v[168] << (lk[0] % 16)) | (v[168] >>> (32 - (lk[0] % 16)));
    v[171] += lk[1];
    v[170] ^= lk[0];
    v[173] = (v[173] << (lk[1] % 16)) | (v[173] >>> (32 - (lk[1] % 16)));
    v[172] -= lk[0];
    v[175] ^= lk[1];
    v[174] += lk[0];
    v[177] += lk[1];
    v[176] = (v[176] << (lk[0] % 16)) | (v[176] >>> (32 - (lk[0] % 16)));
    v[179] -= lk[1];
    v[178] -= lk[0];
    v[181] -= lk[1];
    v[180] = (v[180] >>> (lk[0] % 16)) | (v[180] << (32 - (lk[0] % 16)));
    v[183] += lk[1];
    v[182] += lk[0];
    v[185] = (v[185] << (lk[1] % 16)) | (v[185] >>> (32 - (lk[1] % 16)));
    v[184] = (v[184] >>> (lk[0] % 16)) | (v[184] << (32 - (lk[0] % 16)));
    v[187] += lk[1];
    v[186] = (v[186] << (lk[0] % 16)) | (v[186] >>> (32 - (lk[0] % 16)));
    v[189] += lk[1];
    v[188] ^= lk[0];
    v[191] = (v[191] << (lk[1] % 16)) | (v[191] >>> (32 - (lk[1] % 16)));
    v[190] -= lk[0];
    v[193] ^= lk[1];
    v[192] += lk[0];
    v[195] += lk[1];
    v[194] = (v[194] << (lk[0] % 16)) | (v[194] >>> (32 - (lk[0] % 16)));
    v[197] -= lk[1];
    v[196] -= lk[0];
    v[199] -= lk[1];
    v[198] = (v[198] >>> (lk[0] % 16)) | (v[198] << (32 - (lk[0] % 16)));
    v[201] += lk[1];
    v[200] += lk[0];
    v[203] = (v[203] << (lk[1] % 16)) | (v[203] >>> (32 - (lk[1] % 16)));
    v[202] = (v[202] >>> (lk[0] % 16)) | (v[202] << (32 - (lk[0] % 16)));
    v[205] += lk[1];
    v[204] = (v[204] << (lk[0] % 16)) | (v[204] >>> (32 - (lk[0] % 16)));
    v[207] += lk[1];
    v[206] ^= lk[0];
    v[209] = (v[209] << (lk[1] % 16)) | (v[209] >>> (32 - (lk[1] % 16)));
    v[208] -= lk[0];
    v[211] ^= lk[1];
    v[210] += lk[0];
    v[213] += lk[1];
    v[212] = (v[212] << (lk[0] % 16)) | (v[212] >>> (32 - (lk[0] % 16)));
    v[215] -= lk[1];
    v[214] -= lk[0];
    v[217] -= lk[1];
    v[216] = (v[216] >>> (lk[0] % 16)) | (v[216] << (32 - (lk[0] % 16)));
    v[219] += lk[1];
    v[218] += lk[0];
    v[221] = (v[221] << (lk[1] % 16)) | (v[221] >>> (32 - (lk[1] % 16)));
    v[220] = (v[220] >>> (lk[0] % 16)) | (v[220] << (32 - (lk[0] % 16)));
    v[223] += lk[1];
    v[222] = (v[222] << (lk[0] % 16)) | (v[222] >>> (32 - (lk[0] % 16)));
    v[225] += lk[1];
    v[224] ^= lk[0];
    v[227] = (v[227] << (lk[1] % 16)) | (v[227] >>> (32 - (lk[1] % 16)));
    v[226] -= lk[0];
    v[229] ^= lk[1];
    v[228] += lk[0];
    v[231] += lk[1];
    v[230] = (v[230] << (lk[0] % 16)) | (v[230] >>> (32 - (lk[0] % 16)));
    v[233] -= lk[1];
    v[232] -= lk[0];
    v[235] -= lk[1];
    v[234] = (v[234] >>> (lk[0] % 16)) | (v[234] << (32 - (lk[0] % 16)));
    v[237] += lk[1];
    v[236] += lk[0];
    v[239] = (v[239] << (lk[1] % 16)) | (v[239] >>> (32 - (lk[1] % 16)));
    v[238] = (v[238] >>> (lk[0] % 16)) | (v[238] << (32 - (lk[0] % 16)));
    v[241] += lk[1];
    v[240] = (v[240] << (lk[0] % 16)) | (v[240] >>> (32 - (lk[0] % 16)));
    v[243] += lk[1];
    v[242] ^= lk[0];
    v[245] = (v[245] << (lk[1] % 16)) | (v[245] >>> (32 - (lk[1] % 16)));
    v[244] -= lk[0];
    v[247] ^= lk[1];
    v[246] += lk[0];
    v[249] += lk[1];
    v[248] = (v[248] << (lk[0] % 16)) | (v[248] >>> (32 - (lk[0] % 16)));
    v[251] -= lk[1];
    v[250] -= lk[0];
    v[253] -= lk[1];
    v[252] = (v[252] >>> (lk[0] % 16)) | (v[252] << (32 - (lk[0] % 16)));
    v[255] += lk[1];
    v[254] += lk[0];
    v[257] = (v[257] << (lk[1] % 16)) | (v[257] >>> (32 - (lk[1] % 16)));
    v[256] = (v[256] >>> (lk[0] % 16)) | (v[256] << (32 - (lk[0] % 16)));
    v[259] += lk[1];
    v[258] = (v[258] << (lk[0] % 16)) | (v[258] >>> (32 - (lk[0] % 16)));
    v[261] += lk[1];
    v[260] ^= lk[0];
    v[263] = (v[263] << (lk[1] % 16)) | (v[263] >>> (32 - (lk[1] % 16)));
    v[262] -= lk[0];
    v[265] ^= lk[1];
    v[264] += lk[0];
    v[267] += lk[1];
    v[266] = (v[266] << (lk[0] % 16)) | (v[266] >>> (32 - (lk[0] % 16)));
    v[269] -= lk[1];
    v[268] -= lk[0];
    v[271] -= lk[1];
    v[270] = (v[270] >>> (lk[0] % 16)) | (v[270] << (32 - (lk[0] % 16)));
    v[273] += lk[1];
    v[272] += lk[0];
    v[275] = (v[275] << (lk[1] % 16)) | (v[275] >>> (32 - (lk[1] % 16)));
    v[274] = (v[274] >>> (lk[0] % 16)) | (v[274] << (32 - (lk[0] % 16)));
    v[277] += lk[1];
    v[276] = (v[276] << (lk[0] % 16)) | (v[276] >>> (32 - (lk[0] % 16)));
    v[279] += lk[1];
    v[278] ^= lk[0];
    v[281] = (v[281] << (lk[1] % 16)) | (v[281] >>> (32 - (lk[1] % 16)));
    v[280] -= lk[0];
    v[283] ^= lk[1];
    v[282] += lk[0];
    v[285] += lk[1];
    v[284] = (v[284] << (lk[0] % 16)) | (v[284] >>> (32 - (lk[0] % 16)));
    v[287] -= lk[1];
    v[286] -= lk[0];
    v[289] -= lk[1];
    v[288] = (v[288] >>> (lk[0] % 16)) | (v[288] << (32 - (lk[0] % 16)));
    v[291] += lk[1];
    v[290] += lk[0];
    v[293] = (v[293] << (lk[1] % 16)) | (v[293] >>> (32 - (lk[1] % 16)));
    v[292] = (v[292] >>> (lk[0] % 16)) | (v[292] << (32 - (lk[0] % 16)));
    v[295] += lk[1];
    v[294] = (v[294] << (lk[0] % 16)) | (v[294] >>> (32 - (lk[0] % 16)));
    v[297] += lk[1];
    v[296] ^= lk[0];
    v[299] = (v[299] << (lk[1] % 16)) | (v[299] >>> (32 - (lk[1] % 16)));
    v[298] -= lk[0];
    v[301] ^= lk[1];
    v[300] += lk[0];
    v[303] += lk[1];
    v[302] = (v[302] << (lk[0] % 16)) | (v[302] >>> (32 - (lk[0] % 16)));
    v[305] -= lk[1];
    v[304] -= lk[0];
    v[307] -= lk[1];
    v[306] = (v[306] >>> (lk[0] % 16)) | (v[306] << (32 - (lk[0] % 16)));
    v[309] += lk[1];
    v[308] += lk[0];
    v[311] = (v[311] << (lk[1] % 16)) | (v[311] >>> (32 - (lk[1] % 16)));
    v[310] = (v[310] >>> (lk[0] % 16)) | (v[310] << (32 - (lk[0] % 16)));
    v[313] += lk[1];
    v[312] = (v[312] << (lk[0] % 16)) | (v[312] >>> (32 - (lk[0] % 16)));
    v[315] += lk[1];
    v[314] ^= lk[0];
    v[317] = (v[317] << (lk[1] % 16)) | (v[317] >>> (32 - (lk[1] % 16)));
    v[316] -= lk[0];
    v[319] ^= lk[1];
    v[318] += lk[0];
    v[321] += lk[1];
    v[320] = (v[320] << (lk[0] % 16)) | (v[320] >>> (32 - (lk[0] % 16)));
    v[323] -= lk[1];
    v[322] -= lk[0];
    v[325] -= lk[1];
    v[324] = (v[324] >>> (lk[0] % 16)) | (v[324] << (32 - (lk[0] % 16)));
    v[327] += lk[1];
    v[326] += lk[0];
    v[329] = (v[329] << (lk[1] % 16)) | (v[329] >>> (32 - (lk[1] % 16)));
    v[328] = (v[328] >>> (lk[0] % 16)) | (v[328] << (32 - (lk[0] % 16)));
    v[331] += lk[1];
    v[330] = (v[330] << (lk[0] % 16)) | (v[330] >>> (32 - (lk[0] % 16)));
    v[333] += lk[1];
    v[332] ^= lk[0];
    v[335] = (v[335] << (lk[1] % 16)) | (v[335] >>> (32 - (lk[1] % 16)));
    v[334] -= lk[0];
    v[337] ^= lk[1];
    v[336] += lk[0];
    v[339] += lk[1];
    v[338] = (v[338] << (lk[0] % 16)) | (v[338] >>> (32 - (lk[0] % 16)));
    v[341] -= lk[1];
    v[340] -= lk[0];
    v[343] -= lk[1];
    v[342] = (v[342] >>> (lk[0] % 16)) | (v[342] << (32 - (lk[0] % 16)));
    v[345] += lk[1];
    v[344] += lk[0];
    v[347] = (v[347] << (lk[1] % 16)) | (v[347] >>> (32 - (lk[1] % 16)));
    v[346] = (v[346] >>> (lk[0] % 16)) | (v[346] << (32 - (lk[0] % 16)));
    v[349] += lk[1];
    v[348] = (v[348] << (lk[0] % 16)) | (v[348] >>> (32 - (lk[0] % 16)));
    v[351] += lk[1];
    v[350] ^= lk[0];
    v[353] = (v[353] << (lk[1] % 16)) | (v[353] >>> (32 - (lk[1] % 16)));
    v[352] -= lk[0];
    v[355] ^= lk[1];
    v[354] += lk[0];
    v[357] += lk[1];
    v[356] = (v[356] << (lk[0] % 16)) | (v[356] >>> (32 - (lk[0] % 16)));
    v[359] -= lk[1];
    v[358] -= lk[0];
    v[361] -= lk[1];
    v[360] = (v[360] >>> (lk[0] % 16)) | (v[360] << (32 - (lk[0] % 16)));
    v[363] += lk[1];
    v[362] += lk[0];
    v[365] = (v[365] << (lk[1] % 16)) | (v[365] >>> (32 - (lk[1] % 16)));
    v[364] = (v[364] >>> (lk[0] % 16)) | (v[364] << (32 - (lk[0] % 16)));
    v[367] += lk[1];
    v[366] = (v[366] << (lk[0] % 16)) | (v[366] >>> (32 - (lk[0] % 16)));
    v[369] += lk[1];
    v[368] ^= lk[0];
    v[371] = (v[371] << (lk[1] % 16)) | (v[371] >>> (32 - (lk[1] % 16)));
    v[370] -= lk[0];
    v[373] ^= lk[1];
    v[372] += lk[0];
    v[375] += lk[1];
    v[374] = (v[374] << (lk[0] % 16)) | (v[374] >>> (32 - (lk[0] % 16)));
    v[377] -= lk[1];
    v[376] -= lk[0];
    v[379] -= lk[1];
    v[378] = (v[378] >>> (lk[0] % 16)) | (v[378] << (32 - (lk[0] % 16)));
    v[381] += lk[1];
    v[380] += lk[0];
    v[383] = (v[383] << (lk[1] % 16)) | (v[383] >>> (32 - (lk[1] % 16)));
    v[382] = (v[382] >>> (lk[0] % 16)) | (v[382] << (32 - (lk[0] % 16)));
    v[385] += lk[1];
    v[384] = (v[384] << (lk[0] % 16)) | (v[384] >>> (32 - (lk[0] % 16)));
    v[387] += lk[1];
    v[386] ^= lk[0];
    v[389] = (v[389] << (lk[1] % 16)) | (v[389] >>> (32 - (lk[1] % 16)));
    v[388] -= lk[0];
    v[391] ^= lk[1];
    v[390] += lk[0];
    v[393] += lk[1];
    v[392] = (v[392] << (lk[0] % 16)) | (v[392] >>> (32 - (lk[0] % 16)));
    v[395] -= lk[1];
    v[394] -= lk[0];
    v[397] -= lk[1];
    v[396] = (v[396] >>> (lk[0] % 16)) | (v[396] << (32 - (lk[0] % 16)));
    v[399] += lk[1];
    v[398] += lk[0];
    v[401] = (v[401] << (lk[1] % 16)) | (v[401] >>> (32 - (lk[1] % 16)));
    v[400] = (v[400] >>> (lk[0] % 16)) | (v[400] << (32 - (lk[0] % 16)));
    v[403] += lk[1];
    v[402] = (v[402] << (lk[0] % 16)) | (v[402] >>> (32 - (lk[0] % 16)));
    v[405] += lk[1];
    v[404] ^= lk[0];
    v[407] = (v[407] << (lk[1] % 16)) | (v[407] >>> (32 - (lk[1] % 16)));
    v[406] -= lk[0];
    v[409] ^= lk[1];
    v[408] += lk[0];
    v[411] += lk[1];
    v[410] = (v[410] << (lk[0] % 16)) | (v[410] >>> (32 - (lk[0] % 16)));
    v[413] -= lk[1];
    v[412] -= lk[0];
    v[415] -= lk[1];
    v[414] = (v[414] >>> (lk[0] % 16)) | (v[414] << (32 - (lk[0] % 16)));
    v[417] += lk[1];
    v[416] += lk[0];
    v[419] = (v[419] << (lk[1] % 16)) | (v[419] >>> (32 - (lk[1] % 16)));
    v[418] = (v[418] >>> (lk[0] % 16)) | (v[418] << (32 - (lk[0] % 16)));
    v[421] += lk[1];
    v[420] = (v[420] << (lk[0] % 16)) | (v[420] >>> (32 - (lk[0] % 16)));
    v[423] += lk[1];
    v[422] ^= lk[0];
    v[425] = (v[425] << (lk[1] % 16)) | (v[425] >>> (32 - (lk[1] % 16)));
    v[424] -= lk[0];
    v[427] ^= lk[1];
    v[426] += lk[0];
    v[429] += lk[1];
    v[428] = (v[428] << (lk[0] % 16)) | (v[428] >>> (32 - (lk[0] % 16)));
    for (var I = 0; I < 430; I += 2) {
        var i, v0 = v[I] ^ k2[0],
            v1 = v[I + 1] ^ k2[1],
            d = 0x9E3779B9,
            sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 429; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x976c073;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(df6bb828052470, df6bb828052471, df6bb828052472);
}